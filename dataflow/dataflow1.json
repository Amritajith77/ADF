{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "usecase4_source",
						"type": "DatasetReference"
					},
					"name": "sales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "usecase4_valid",
						"type": "DatasetReference"
					},
					"name": "valid"
				},
				{
					"dataset": {
						"referenceName": "usecase4_invalid",
						"type": "DatasetReference"
					},
					"name": "Invalid"
				}
			],
			"transformations": [
				{
					"name": "validateRecords"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesDate as date 'dd-MM-yyyy',",
				"          SalesMan as string,",
				"          Item as string,",
				"          Units as integer,",
				"          Unit_price as decimal(10,0) '000,000,000.000',",
				"          Sale_amt as decimal(10,0) '000,000,000.000'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sales",
				"sales split(Units > 0 &&\r",
				"Unit_price >= 0.0 &&\r",
				"Sale_amt >= 0.0 &&\r",
				"!isNull(SalesMan) &&\r",
				"!isNull(SalesDate) &&\r",
				"!isNull(Item)\r",
				"\r",
				" \r",
				"\r",
				"\r",
				"\r",
				"\r",
				",",
				"     disjoint: false) ~> validateRecords@(valid, Invalid)",
				"validateRecords@valid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesDate as date,",
				"          SalesMan as string,",
				"          Item as string,",
				"          Units as integer,",
				"          Unit_price as decimal(10,2),",
				"          Sale_amt as decimal(12,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> valid",
				"validateRecords@Invalid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesDate as date,",
				"          SalesMan as string,",
				"          Item as string,",
				"          Units as integer,",
				"          Unit_price as decimal(10,2),",
				"          Sale_amt as decimal(12,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> Invalid"
			]
		}
	}
}