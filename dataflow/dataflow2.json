{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "usecase2_source",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "usecase2_gold",
						"type": "DatasetReference"
					},
					"name": "Gold"
				},
				{
					"dataset": {
						"referenceName": "usecase2_silver",
						"type": "DatasetReference"
					},
					"name": "Silver"
				},
				{
					"dataset": {
						"referenceName": "usecase_bronze",
						"type": "DatasetReference"
					},
					"name": "Bronze"
				}
			],
			"transformations": [
				{
					"name": "splitByMedal"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          Name as string,",
				"          Gender as string,",
				"          Age as string,",
				"          {Height (cm)} as string,",
				"          {Weight (kg)} as string,",
				"          Team as string,",
				"          NOC as string,",
				"          Games as string,",
				"          Year as string,",
				"          Season as string,",
				"          City as string,",
				"          Sport as string,",
				"          Event as string,",
				"          Medal as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source split(Medal == 'Gold'\r",
				",",
				"     Medal == 'Silver'\r",
				",",
				"     disjoint: false) ~> splitByMedal@(Gold, Silver, Bronze)",
				"splitByMedal@Gold sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Gold",
				"splitByMedal@Silver sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Silver",
				"splitByMedal@Bronze sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Bronze"
			]
		}
	}
}